# version: '3'

networks:
  webapp:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}_nginx
    ports:
    - "80:80"
    links:
      - web
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - web
    networks:
      - webapp

  web:
    build:
      context: .
      dockerfile: Dockerfile
    # command: ["yarn", "echo", "--force"]
    container_name: ${APP_NAME}_app
    volumes:
      - ./:/var/www/html
    ports:
      - "9001:9000"
      - "6001:6001"
    depends_on:
      - db
      - redis
    networks:
      - webapp
  
  db:
    image: postgres:14.3-alpine
    container_name: ${APP_NAME}_database
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5432:5432"
    networks:
      - webapp

  adminer:
    image: adminer
    container_name: ${APP_NAME}_adminer
    ports:
      - "8080:8080"
    networks:
      - webapp

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}_redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./docker/redis:/data
    ports:
      - "6379:6379"
    networks:
      - webapp
